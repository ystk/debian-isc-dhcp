#!/bin/sh

set -e

# reduced dhclient-script for the Debian installer
# changes by Joshua Kwan <joshk@triplehelix.org>,
# Bastian Blank <waldi@debian.org>

# dhclient-script for Linux. Dan Halbert, March, 1997.
# Updated for Linux 2.[12] by Brian J. Murrell, January 1999.
# Modified for Debian.  Matt Zimmerman and Eloy Paris, December 2003

# update /etc/resolv.conf based on received values
make_resolv_conf() {
    local new_resolv_conf

    if [ -n "$new_domain_name" ] || [ -n "$new_domain_name_servers" ]; then
        new_resolv_conf=/etc/resolv.conf.dhclient-new
        rm -f $new_resolv_conf

        if [ -n "$new_domain_name" ]; then
            echo "search $new_domain_name" >>$new_resolv_conf
        fi

        for nameserver in $new_domain_name_servers; do
            echo "nameserver $nameserver" >>$new_resolv_conf
        done

        mv $new_resolv_conf /etc/resolv.conf
    fi
}

# set host name
set_hostname() {
    local current_hostname

    if [ -n "$new_host_name" ]; then
        current_hostname=$(hostname)

        if [ -z "$current_hostname" ] || [ "$current_hostname" = "(none)" ]; then
            hostname "$new_host_name"
        fi
    fi
}

# set up some variables for DHCP handlers below
if [ -n "$new_subnet_mask" ]; then
    new_mask="/$(ptom $new_subnet_mask)"
fi

# Execute the operation
case "$reason" in
    MEDIUM|ARPCHECK|ARPSEND)
        # Do nothing
        ;;
    PREINIT)
        ifconfig $interface inet 0.0.0.0 netmask 0.0.0.0 \
            broadcast 255.255.255.255 up

        # We need to give the kernel some time to get the interface up.
        sleep 1

        ;;

    BOUND|RENEW|REBIND|REBOOT)
        set_hostname

        if [ -n "$old_ip_address" ] &&
           [ "$old_ip_address" != "$new_ip_address" ]; then
            # IP address changed. Bringing down the interface will delete all routes,
            # and clear the ARP cache.
            ifconfig $interface inet -alias $old_ip_address $medium
            route delete $old_ip_address 127.1 >/dev/null 2>&1
            ifconfig $interface inet 0 down
        fi

        if [ -n "$new_interface_mtu" ]; then
            ifconfig $interface mtu $new_interface_mtu || true
        fi

        if [ -z "$old_ip_address" ] ||
           [ "$old_ip_address" != "$new_ip_address" ] ||
           [ "$reason" = "BOUND" ] || [ "$reason" = "REBOOT" ]; then

            ifconfig $interface inet $new_ip_address $new_subnet_arg \
                ${new_broadcast_address:+broadcast $new_broadcast_address} $medium $mtu_arg
            route add $new_ip_address 127.1 $metric_arg >/dev/null 2>&1 || true
            for router in $new_routers; do
                route add default $router >/dev/null 2>&1
            done
        fi

        make_resolv_conf

        # Get the domain name into a file suitable for netcfg to read.
        printf "$new_domain_name" > /tmp/domain_name

        if [ -n "$new_ntp_servers" ]; then
            printf "$new_ntp_servers" > /tmp/dhcp-ntp-servers
        fi

        ;;

    EXPIRE|FAIL|RELEASE|STOP)
        if [ -n "$old_ip_address" ]; then
            route delete $old_ip_address 127.1 >/dev/null 2>&1
            # Shut down interface, which will delete routes and clear arp cache.
            ifconfig $interface inet 0 down
        fi

        ;;

    TIMEOUT)
        ifconfig $interface down

        ;;
esac

exit 0
